---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogCard from '../../components/BlogCard.astro';

// Obtener todas las entradas del blog
const allPosts = await getCollection('blog');

// Ordenar por fecha (más recientes primero)
const sortedPosts = allPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Obtener posts destacados
const featuredPosts = sortedPosts.filter(post => post.data.featured);
const regularPosts = sortedPosts.filter(post => !post.data.featured);

// Obtener todas las etiquetas únicas
const allTags = [...new Set(allPosts.flatMap(post => post.data.tags))];

// Función para obtener posts recientes
const recentPosts = sortedPosts.slice(0, 5);
---

<BaseLayout 
  title="Blog - Mi Sitio Web"
  description="Mantente actualizado con nuestros artículos sobre desarrollo web, marketing digital, SEO y tendencias tecnológicas. Contenido valioso para hacer crecer tu negocio."
>
  <!-- Hero Section -->
  <section class="blog-hero">
    <div class="container">
      <div class="hero-content">
        <h1>Nuestro Blog</h1>
        <p class="hero-description">
          Comparte conocimiento, tendencias y consejos prácticos sobre desarrollo web, 
          marketing digital y tecnología para ayudarte a hacer crecer tu negocio.
        </p>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <section class="section">
    <div class="container">
      <div class="blog-layout">
        <!-- Main Content -->
        <main class="blog-main">
          <!-- Featured Posts -->
          {featuredPosts.length > 0 && (
            <section class="featured-section">
              <h2 class="section-title">Artículos Destacados</h2>
              <div class="featured-grid">
                {featuredPosts.map((post) => (
                  <BlogCard
                    title={post.data.title}
                    description={post.data.description}
                    author={post.data.author}
                    date={post.data.date}
                    slug={post.slug}
                    tags={post.data.tags}
                    image={post.data.image}
                    featured={post.data.featured}
                  />
                ))}
              </div>
            </section>
          )}

          <!-- All Posts -->
          <section class="all-posts-section">
            <h2 class="section-title">Todos los Artículos</h2>
            <div class="posts-grid">
              {sortedPosts.map((post) => (
                <BlogCard
                  title={post.data.title}
                  description={post.data.description}
                  author={post.data.author}
                  date={post.data.date}
                  slug={post.slug}
                  tags={post.data.tags}
                  image={post.data.image}
                  featured={post.data.featured}
                />
              ))}
            </div>
          </section>
        </main>

        <!-- Sidebar -->
        <aside class="blog-sidebar">
          <!-- Search Box -->
          <div class="sidebar-widget">
            <h3>Buscar Artículos</h3>
            <div class="search-box">
              <input 
                type="text" 
                placeholder="Buscar..." 
                id="search-input"
                class="search-input"
              >
              <button type="button" class="search-button" id="search-button">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="11" cy="11" r="8"/>
                  <path d="m21 21-4.35-4.35"/>
                </svg>
              </button>
            </div>
          </div>

          <!-- Recent Posts -->
          <div class="sidebar-widget">
            <h3>Artículos Recientes</h3>
            <div class="recent-posts">
              {recentPosts.map((post) => (
                <article class="recent-post">
                  <a href={`/blog/${post.slug}`} class="recent-post-link">
                    <h4>{post.data.title}</h4>
                    <time class="recent-post-date">
                      {post.data.date.toLocaleDateString('es-ES', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                      })}
                    </time>
                  </a>
                </article>
              ))}
            </div>
          </div>

          <!-- Tags Cloud -->
          <div class="sidebar-widget">
            <h3>Etiquetas</h3>
            <div class="tags-cloud">
              {allTags.map((tag) => (
                <span class="tag-item" data-tag={tag}>{tag}</span>
              ))}
            </div>
          </div>

          <!-- Newsletter -->
          <div class="sidebar-widget newsletter-widget">
            <h3>Suscríbete</h3>
            <p>Recibe nuestros últimos artículos directamente en tu correo.</p>
            <form class="newsletter-form">
              <input 
                type="email" 
                placeholder="Tu email" 
                required
                class="newsletter-input"
              >
              <button type="submit" class="newsletter-button">
                Suscribirse
              </button>
            </form>
          </div>

          <!-- RSS Feed -->
          <div class="sidebar-widget">
            <h3>Síguenos</h3>
            <div class="social-links">
              <a href="/rss.xml" class="social-link rss">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M6.503 20.752c0 1.794-1.456 3.248-3.251 3.248-1.796 0-3.252-1.454-3.252-3.248 0-1.794 1.456-3.248 3.252-3.248 1.795.001 3.251 1.454 3.251 3.248zm-6.503-12.572v4.811c6.05.062 10.96 4.966 11.022 11.009h4.817c-.062-8.71-7.118-15.758-15.839-15.82zm0-3.368c10.58.046 19.152 8.594 19.183 19.188h4.817c-.03-13.231-10.755-23.954-24-24v4.812z"/>
                </svg>
                RSS Feed
              </a>
            </div>
          </div>
        </aside>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .blog-hero {
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-dark) 100%);
    color: white;
    padding: var(--spacing-12) 0;
    text-align: center;
  }

  .hero-content h1 {
    font-size: var(--font-size-4xl);
    margin-bottom: var(--spacing-6);
    color: white;
  }

  .hero-description {
    font-size: var(--font-size-lg);
    max-width: 600px;
    margin: 0 auto;
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.6;
  }

  .blog-layout {
    display: grid;
    grid-template-columns: 1fr 300px;
    gap: var(--spacing-12);
    align-items: start;
  }

  .blog-main {
    width: 100%;
  }

  .section-title {
    font-size: var(--font-size-2xl);
    margin-bottom: var(--spacing-8);
    color: var(--text-primary);
    border-bottom: 3px solid var(--color-primary);
    padding-bottom: var(--spacing-3);
    display: inline-block;
  }

  .featured-section {
    margin-bottom: var(--spacing-16);
  }

  .featured-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--spacing-8);
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--spacing-8);
  }

  .blog-sidebar {
    position: sticky;
    top: var(--spacing-8);
  }

  .sidebar-widget {
    background: white;
    padding: var(--spacing-6);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow);
    margin-bottom: var(--spacing-6);
  }

  .sidebar-widget h3 {
    font-size: var(--font-size-lg);
    margin-bottom: var(--spacing-4);
    color: var(--text-primary);
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: var(--spacing-2);
  }

  .search-box {
    display: flex;
    border: 2px solid #e2e8f0;
    border-radius: var(--border-radius);
    overflow: hidden;
  }

  .search-input {
    flex: 1;
    padding: var(--spacing-3);
    border: none;
    outline: none;
    font-size: var(--font-size-base);
  }

  .search-button {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-3);
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .search-button:hover {
    background: var(--color-primary-dark);
  }

  .recent-posts {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-4);
  }

  .recent-post {
    padding-bottom: var(--spacing-3);
    border-bottom: 1px solid #e2e8f0;
  }

  .recent-post:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .recent-post-link {
    text-decoration: none;
    display: block;
  }

  .recent-post h4 {
    font-size: var(--font-size-sm);
    color: var(--text-primary);
    margin-bottom: var(--spacing-1);
    line-height: 1.4;
    transition: color 0.2s ease;
  }

  .recent-post-link:hover h4 {
    color: var(--color-primary);
  }

  .recent-post-date {
    font-size: var(--font-size-sm);
    color: var(--text-light);
  }

  .tags-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-2);
  }

  .tag-item {
    background: var(--bg-secondary);
    color: var(--color-primary);
    padding: var(--spacing-1) var(--spacing-3);
    border-radius: var(--border-radius);
    font-size: var(--font-size-sm);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .tag-item:hover {
    background: var(--color-primary);
    color: white;
  }

  .newsletter-widget {
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-dark) 100%);
    color: white;
  }

  .newsletter-widget h3 {
    color: white;
    border-bottom-color: rgba(255, 255, 255, 0.3);
  }

  .newsletter-widget p {
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: var(--spacing-4);
  }

  .newsletter-form {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-3);
  }

  .newsletter-input {
    padding: var(--spacing-3);
    border: none;
    border-radius: var(--border-radius);
    font-size: var(--font-size-base);
  }

  .newsletter-button {
    background: white;
    color: var(--color-primary);
    border: none;
    padding: var(--spacing-3);
    border-radius: var(--border-radius);
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .newsletter-button:hover {
    background: rgba(255, 255, 255, 0.9);
    transform: translateY(-1px);
  }

  .social-links {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-3);
  }

  .social-link {
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    color: var(--text-secondary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .social-link:hover {
    color: var(--color-primary);
  }

  .social-link.rss {
    color: #ff6600;
  }

  .social-link.rss:hover {
    color: #e55a00;
  }

  @media (max-width: 1024px) {
    .blog-layout {
      grid-template-columns: 1fr;
      gap: var(--spacing-8);
    }

    .blog-sidebar {
      position: static;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: var(--spacing-6);
    }
  }

  @media (max-width: 768px) {
    .featured-grid,
    .posts-grid {
      grid-template-columns: 1fr;
    }

    .blog-sidebar {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  // Funcionalidad de búsqueda simple
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search-input') as HTMLInputElement;
    const searchButton = document.getElementById('search-button');
    
    function performSearch() {
      const searchTerm = searchInput?.value.toLowerCase();
      if (searchTerm?.trim()) {
        // Aquí puedes implementar la lógica de búsqueda
        // Por ejemplo, filtrar los posts mostrados o redirigir a una página de resultados
        console.log('Buscando:', searchTerm);
        // window.location.href = `/blog/search?q=${encodeURIComponent(searchTerm)}`;
      }
    }

    searchButton?.addEventListener('click', performSearch);
    searchInput?.addEventListener('keypress', (e: KeyboardEvent) => {
      if (e.key === 'Enter') {
        performSearch();
      }
    });

    // Funcionalidad de filtrado por tags
    const tagItems = document.querySelectorAll('.tag-item');
    tagItems.forEach(tag => {
      tag.addEventListener('click', () => {
        const tagName = (tag as HTMLElement).dataset.tag;
        // Implementar filtrado por tags
        console.log('Filtrar por tag:', tagName);
      });
    });

    // Newsletter form
    const newsletterForm = document.querySelector('.newsletter-form') as HTMLFormElement;
    newsletterForm?.addEventListener('submit', (e: Event) => {
      e.preventDefault();
      const target = e.target as HTMLFormElement;
      if (target) {
        const emailInput = target.querySelector('.newsletter-input') as HTMLInputElement;
        const email = emailInput?.value;
        console.log('Suscribir email:', email);
        alert('¡Gracias por suscribirte! Te mantendremos informado.');
        target.reset();
      }
    });
  });
</script>